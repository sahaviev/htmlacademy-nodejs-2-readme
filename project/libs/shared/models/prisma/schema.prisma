// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id             String    @id @default(uuid()) @map("id")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  userId         String    @map("user_id")
  publishDate    DateTime? @map("publish_date")
  postType       String    @map("post_type")
  postState      String    @map("post_state")
  title          String?
  link           String?
  description    String?
  photoUrl       String?   @map("photo_url")
  quoteText      String?   @map("quote_text")
  quoteAuthor    String?   @map("quote_author")
  announcement   String?
  postText       String?   @map("post_text")
  videoLink      String?   @map("video_link")
  isReposted     Boolean?  @map("is_reposted")
  creatorUserId  String?   @map("creator_user_id")
  originalPostId String?   @map("original_post_id")
  Comment        Comment[]
  Like           Like[]
  Tag            Tag[]

  @@index([title])
  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  message   String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String   @map("post_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([postId])
  @@map("comments")
}

model Like {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String   @map("post_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([postId])
  @@map("likes")
}

model Tag {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  posts     Post[]

  @@map("tags")
}
